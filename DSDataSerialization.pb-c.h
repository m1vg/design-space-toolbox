/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: DSDataSerialization.proto */

#ifndef PROTOBUF_C_DSDataSerialization_2eproto__INCLUDED
#define PROTOBUF_C_DSDataSerialization_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _DSMatrixMessage DSMatrixMessage;
typedef struct _DSuIntegerMatrixMessage DSuIntegerMatrixMessage;
typedef struct _DSMatrixArrayMessage DSMatrixArrayMessage;
typedef struct _DSSSystemMessage DSSSystemMessage;
typedef struct _DSCaseMessage DSCaseMessage;
typedef struct _DSCyclicalCaseMessage DSCyclicalCaseMessage;
typedef struct _DSGMASystemMessage DSGMASystemMessage;
typedef struct _DSVectorMessage DSVectorMessage;
typedef struct _DSExtensionDataMessage DSExtensionDataMessage;
typedef struct _DSDesignSpaceMessage DSDesignSpaceMessage;
typedef struct _DSMassBalanceDataMessage DSMassBalanceDataMessage;


/* --- enums --- */


/* --- messages --- */

struct  _DSMatrixMessage
{
  ProtobufCMessage base;
  int32_t rows;
  int32_t columns;
  size_t n_values;
  double *values;
};
#define DSMATRIX_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dsmatrix_message__descriptor) \
    , 0, 0, 0,NULL }


struct  _DSuIntegerMatrixMessage
{
  ProtobufCMessage base;
  int32_t rows;
  int32_t columns;
  size_t n_values;
  int32_t *values;
};
#define DSU_INTEGER_MATRIX_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dsu_integer_matrix_message__descriptor) \
    , 0, 0, 0,NULL }


struct  _DSMatrixArrayMessage
{
  ProtobufCMessage base;
  size_t n_matrices;
  DSMatrixMessage **matrices;
};
#define DSMATRIX_ARRAY_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dsmatrix_array_message__descriptor) \
    , 0,NULL }


struct  _DSSSystemMessage
{
  ProtobufCMessage base;
  DSMatrixMessage *alpha;
  DSMatrixMessage *beta;
  DSMatrixMessage *gd;
  DSMatrixMessage *gi;
  DSMatrixMessage *hd;
  DSMatrixMessage *hi;
  protobuf_c_boolean modifierflag;
  DSMatrixMessage *m;
  size_t n_xd;
  char **xd;
  size_t n_xd_t;
  char **xd_t;
  size_t n_xd_a;
  char **xd_a;
  size_t n_xi;
  char **xi;
  protobuf_c_boolean has_numberofconservations;
  int32_t numberofconservations;
};
#define DSSSYSTEM_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dsssystem_message__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0, 0 }


struct  _DSCaseMessage
{
  ProtobufCMessage base;
  int32_t casenumber;
  DSSSystemMessage *ssystem;
  DSMatrixMessage *cd;
  DSMatrixMessage *ci;
  char *caseidentifier;
  size_t n_signature;
  int32_t *signature;
  DSMatrixMessage *u;
  DSMatrixMessage *delta;
  DSMatrixMessage *zeta;
  size_t n_signature_3d;
  int32_t *signature_3d;
  size_t n_conserved_sig;
  int32_t *conserved_sig;
  protobuf_c_boolean has_numberinheritedconservations;
  int32_t numberinheritedconservations;
};
#define DSCASE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dscase_message__descriptor) \
    , 0, NULL, NULL, NULL, NULL, 0,NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, 0, 0 }


struct  _DSCyclicalCaseMessage
{
  ProtobufCMessage base;
  DSCaseMessage *originalcase;
  DSDesignSpaceMessage *internaldesignspace;
};
#define DSCYCLICAL_CASE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dscyclical_case_message__descriptor) \
    , NULL, NULL }


struct  _DSGMASystemMessage
{
  ProtobufCMessage base;
  DSMatrixMessage *alpha;
  DSMatrixMessage *beta;
  DSMatrixArrayMessage *gd;
  DSMatrixArrayMessage *gi;
  DSMatrixArrayMessage *hd;
  DSMatrixArrayMessage *hi;
  size_t n_xd;
  char **xd;
  size_t n_xd_a;
  char **xd_a;
  size_t n_xd_t;
  char **xd_t;
  size_t n_xi;
  char **xi;
  size_t n_signature;
  int32_t *signature;
};
#define DSGMASYSTEM_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dsgmasystem_message__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _DSVectorMessage
{
  ProtobufCMessage base;
  size_t n_vector;
  int32_t *vector;
};
#define DSVECTOR_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dsvector_message__descriptor) \
    , 0,NULL }


struct  _DSExtensionDataMessage
{
  ProtobufCMessage base;
  int32_t numbercycles;
  size_t n_maincyclevariables;
  int32_t *maincyclevariables;
  size_t n_numbersecondaryvariables;
  int32_t *numbersecondaryvariables;
  size_t n_allsecondaryvariables;
  DSVectorMessage **allsecondaryvariables;
  DSSSystemMessage *originalssystem;
  DSuIntegerMatrixMessage *g_l_eq;
  DSuIntegerMatrixMessage *g_l_term;
  DSuIntegerMatrixMessage *h_l_eq;
  DSuIntegerMatrixMessage *h_l_term;
  DSMatrixMessage *originalbeta;
};
#define DSEXTENSION_DATA_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dsextension_data_message__descriptor) \
    , 0, 0,NULL, 0,NULL, 0,NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  _DSDesignSpaceMessage
{
  ProtobufCMessage base;
  DSGMASystemMessage *gma;
  int32_t modifierflags;
  int32_t numberofcases;
  size_t n_validcases;
  int32_t *validcases;
  DSMatrixMessage *cd;
  DSMatrixMessage *ci;
  DSMatrixMessage *delta;
  char *caseprefix;
  size_t n_cyclicalcasesnumbers;
  int32_t *cyclicalcasesnumbers;
  size_t n_cyclicalcases;
  DSCyclicalCaseMessage **cyclicalcases;
  DSExtensionDataMessage *extensiondata;
  size_t n_parent3digitsignature;
  int32_t *parent3digitsignature;
  size_t n_blowingcasesnumbers;
  int32_t *blowingcasesnumbers;
  protobuf_c_boolean has_numberofconservations;
  int32_t numberofconservations;
  protobuf_c_boolean has_numberinheritedconservations;
  int32_t numberinheritedconservations;
  DSMassBalanceDataMessage *massbalances;
  protobuf_c_boolean has_modifierflags2;
  int32_t modifierflags2;
};
#define DSDESIGN_SPACE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dsdesign_space_message__descriptor) \
    , NULL, 0, 0, 0,NULL, NULL, NULL, NULL, NULL, 0,NULL, 0,NULL, NULL, 0,NULL, 0,NULL, 0, 0, 0, 0, NULL, 0, 0 }


struct  _DSMassBalanceDataMessage
{
  ProtobufCMessage base;
  int32_t n;
  size_t n_fin;
  char **fin;
  size_t n_fout;
  char **fout;
  size_t n_signature;
  int32_t *signature;
  size_t n_metabolicblocks_variables;
  char **metabolicblocks_variables;
  size_t n_metabolicblocks_ids;
  int32_t *metabolicblocks_ids;
};
#define DSMASS_BALANCE_DATA_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&dsmass_balance_data_message__descriptor) \
    , 0, 0,NULL, 0,NULL, 0,NULL, 0,NULL, 0,NULL }


/* DSMatrixMessage methods */
void   dsmatrix_message__init
                     (DSMatrixMessage         *message);
size_t dsmatrix_message__get_packed_size
                     (const DSMatrixMessage   *message);
size_t dsmatrix_message__pack
                     (const DSMatrixMessage   *message,
                      uint8_t             *out);
size_t dsmatrix_message__pack_to_buffer
                     (const DSMatrixMessage   *message,
                      ProtobufCBuffer     *buffer);
DSMatrixMessage *
       dsmatrix_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dsmatrix_message__free_unpacked
                     (DSMatrixMessage *message,
                      ProtobufCAllocator *allocator);
/* DSuIntegerMatrixMessage methods */
void   dsu_integer_matrix_message__init
                     (DSuIntegerMatrixMessage         *message);
size_t dsu_integer_matrix_message__get_packed_size
                     (const DSuIntegerMatrixMessage   *message);
size_t dsu_integer_matrix_message__pack
                     (const DSuIntegerMatrixMessage   *message,
                      uint8_t             *out);
size_t dsu_integer_matrix_message__pack_to_buffer
                     (const DSuIntegerMatrixMessage   *message,
                      ProtobufCBuffer     *buffer);
DSuIntegerMatrixMessage *
       dsu_integer_matrix_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dsu_integer_matrix_message__free_unpacked
                     (DSuIntegerMatrixMessage *message,
                      ProtobufCAllocator *allocator);
/* DSMatrixArrayMessage methods */
void   dsmatrix_array_message__init
                     (DSMatrixArrayMessage         *message);
size_t dsmatrix_array_message__get_packed_size
                     (const DSMatrixArrayMessage   *message);
size_t dsmatrix_array_message__pack
                     (const DSMatrixArrayMessage   *message,
                      uint8_t             *out);
size_t dsmatrix_array_message__pack_to_buffer
                     (const DSMatrixArrayMessage   *message,
                      ProtobufCBuffer     *buffer);
DSMatrixArrayMessage *
       dsmatrix_array_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dsmatrix_array_message__free_unpacked
                     (DSMatrixArrayMessage *message,
                      ProtobufCAllocator *allocator);
/* DSSSystemMessage methods */
void   dsssystem_message__init
                     (DSSSystemMessage         *message);
size_t dsssystem_message__get_packed_size
                     (const DSSSystemMessage   *message);
size_t dsssystem_message__pack
                     (const DSSSystemMessage   *message,
                      uint8_t             *out);
size_t dsssystem_message__pack_to_buffer
                     (const DSSSystemMessage   *message,
                      ProtobufCBuffer     *buffer);
DSSSystemMessage *
       dsssystem_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dsssystem_message__free_unpacked
                     (DSSSystemMessage *message,
                      ProtobufCAllocator *allocator);
/* DSCaseMessage methods */
void   dscase_message__init
                     (DSCaseMessage         *message);
size_t dscase_message__get_packed_size
                     (const DSCaseMessage   *message);
size_t dscase_message__pack
                     (const DSCaseMessage   *message,
                      uint8_t             *out);
size_t dscase_message__pack_to_buffer
                     (const DSCaseMessage   *message,
                      ProtobufCBuffer     *buffer);
DSCaseMessage *
       dscase_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dscase_message__free_unpacked
                     (DSCaseMessage *message,
                      ProtobufCAllocator *allocator);
/* DSCyclicalCaseMessage methods */
void   dscyclical_case_message__init
                     (DSCyclicalCaseMessage         *message);
size_t dscyclical_case_message__get_packed_size
                     (const DSCyclicalCaseMessage   *message);
size_t dscyclical_case_message__pack
                     (const DSCyclicalCaseMessage   *message,
                      uint8_t             *out);
size_t dscyclical_case_message__pack_to_buffer
                     (const DSCyclicalCaseMessage   *message,
                      ProtobufCBuffer     *buffer);
DSCyclicalCaseMessage *
       dscyclical_case_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dscyclical_case_message__free_unpacked
                     (DSCyclicalCaseMessage *message,
                      ProtobufCAllocator *allocator);
/* DSGMASystemMessage methods */
void   dsgmasystem_message__init
                     (DSGMASystemMessage         *message);
size_t dsgmasystem_message__get_packed_size
                     (const DSGMASystemMessage   *message);
size_t dsgmasystem_message__pack
                     (const DSGMASystemMessage   *message,
                      uint8_t             *out);
size_t dsgmasystem_message__pack_to_buffer
                     (const DSGMASystemMessage   *message,
                      ProtobufCBuffer     *buffer);
DSGMASystemMessage *
       dsgmasystem_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dsgmasystem_message__free_unpacked
                     (DSGMASystemMessage *message,
                      ProtobufCAllocator *allocator);
/* DSVectorMessage methods */
void   dsvector_message__init
                     (DSVectorMessage         *message);
size_t dsvector_message__get_packed_size
                     (const DSVectorMessage   *message);
size_t dsvector_message__pack
                     (const DSVectorMessage   *message,
                      uint8_t             *out);
size_t dsvector_message__pack_to_buffer
                     (const DSVectorMessage   *message,
                      ProtobufCBuffer     *buffer);
DSVectorMessage *
       dsvector_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dsvector_message__free_unpacked
                     (DSVectorMessage *message,
                      ProtobufCAllocator *allocator);
/* DSExtensionDataMessage methods */
void   dsextension_data_message__init
                     (DSExtensionDataMessage         *message);
size_t dsextension_data_message__get_packed_size
                     (const DSExtensionDataMessage   *message);
size_t dsextension_data_message__pack
                     (const DSExtensionDataMessage   *message,
                      uint8_t             *out);
size_t dsextension_data_message__pack_to_buffer
                     (const DSExtensionDataMessage   *message,
                      ProtobufCBuffer     *buffer);
DSExtensionDataMessage *
       dsextension_data_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dsextension_data_message__free_unpacked
                     (DSExtensionDataMessage *message,
                      ProtobufCAllocator *allocator);
/* DSDesignSpaceMessage methods */
void   dsdesign_space_message__init
                     (DSDesignSpaceMessage         *message);
size_t dsdesign_space_message__get_packed_size
                     (const DSDesignSpaceMessage   *message);
size_t dsdesign_space_message__pack
                     (const DSDesignSpaceMessage   *message,
                      uint8_t             *out);
size_t dsdesign_space_message__pack_to_buffer
                     (const DSDesignSpaceMessage   *message,
                      ProtobufCBuffer     *buffer);
DSDesignSpaceMessage *
       dsdesign_space_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dsdesign_space_message__free_unpacked
                     (DSDesignSpaceMessage *message,
                      ProtobufCAllocator *allocator);
/* DSMassBalanceDataMessage methods */
void   dsmass_balance_data_message__init
                     (DSMassBalanceDataMessage         *message);
size_t dsmass_balance_data_message__get_packed_size
                     (const DSMassBalanceDataMessage   *message);
size_t dsmass_balance_data_message__pack
                     (const DSMassBalanceDataMessage   *message,
                      uint8_t             *out);
size_t dsmass_balance_data_message__pack_to_buffer
                     (const DSMassBalanceDataMessage   *message,
                      ProtobufCBuffer     *buffer);
DSMassBalanceDataMessage *
       dsmass_balance_data_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   dsmass_balance_data_message__free_unpacked
                     (DSMassBalanceDataMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DSMatrixMessage_Closure)
                 (const DSMatrixMessage *message,
                  void *closure_data);
typedef void (*DSuIntegerMatrixMessage_Closure)
                 (const DSuIntegerMatrixMessage *message,
                  void *closure_data);
typedef void (*DSMatrixArrayMessage_Closure)
                 (const DSMatrixArrayMessage *message,
                  void *closure_data);
typedef void (*DSSSystemMessage_Closure)
                 (const DSSSystemMessage *message,
                  void *closure_data);
typedef void (*DSCaseMessage_Closure)
                 (const DSCaseMessage *message,
                  void *closure_data);
typedef void (*DSCyclicalCaseMessage_Closure)
                 (const DSCyclicalCaseMessage *message,
                  void *closure_data);
typedef void (*DSGMASystemMessage_Closure)
                 (const DSGMASystemMessage *message,
                  void *closure_data);
typedef void (*DSVectorMessage_Closure)
                 (const DSVectorMessage *message,
                  void *closure_data);
typedef void (*DSExtensionDataMessage_Closure)
                 (const DSExtensionDataMessage *message,
                  void *closure_data);
typedef void (*DSDesignSpaceMessage_Closure)
                 (const DSDesignSpaceMessage *message,
                  void *closure_data);
typedef void (*DSMassBalanceDataMessage_Closure)
                 (const DSMassBalanceDataMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor dsmatrix_message__descriptor;
extern const ProtobufCMessageDescriptor dsu_integer_matrix_message__descriptor;
extern const ProtobufCMessageDescriptor dsmatrix_array_message__descriptor;
extern const ProtobufCMessageDescriptor dsssystem_message__descriptor;
extern const ProtobufCMessageDescriptor dscase_message__descriptor;
extern const ProtobufCMessageDescriptor dscyclical_case_message__descriptor;
extern const ProtobufCMessageDescriptor dsgmasystem_message__descriptor;
extern const ProtobufCMessageDescriptor dsvector_message__descriptor;
extern const ProtobufCMessageDescriptor dsextension_data_message__descriptor;
extern const ProtobufCMessageDescriptor dsdesign_space_message__descriptor;
extern const ProtobufCMessageDescriptor dsmass_balance_data_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_DSDataSerialization_2eproto__INCLUDED */
